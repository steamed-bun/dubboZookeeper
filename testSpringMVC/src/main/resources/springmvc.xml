<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

        <mvc:annotation-driven/>
        <mvc:default-servlet-handler/>
<!--
        <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" />
        &lt;!&ndash; 以.html为后缀名访问，默认返回数据类型是 text/html， 所以要修改返回的数据类型 &ndash;&gt;
        <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
                <property name="mediaTypes">
                        <map>
                                <entry key="html" value="application/json;charset=UTF-8"/>
                        </map>
                </property>
        </bean>
-->

        <!-- 注解开启 -->
        <context:component-scan base-package="com.coocaa"/>
        <!-- aop 开启 -->
        <aop:aspectj-autoproxy proxy-target-class="true"/>

        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                <property name="prefix" value="/WEB-INF/"/>
                <property name="suffix" value=".html"/>
        </bean>

        <!--
                配置视图解析器
                order值越小 优先级越高
                InternalResourceViewResolver的优先级是最低的
        -->
        <bean name="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
                <property name="order" value="10"/>
        </bean>
        <mvc:interceptors>
                <!-- 多个拦截器,顺序执行 -->
                <bean class="com.coocaa.interceptor.Intercept "/>
        </mvc:interceptors>

</beans>