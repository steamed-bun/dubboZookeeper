<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <!-- 注册数据库的连接信息 -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" id="corePlaceHolder">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <!-- 配置数据源 -->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="url" value="${dataSource.url}"/>
        <property name="username" value="${dataSource.username}"/>
        <property name="password" value="${dataSource.password}"/>
        <property name="driverClassName" value="${driverClassName}"/>

        <property name="initialSize" value="5"/>
        <property name="maxActive" value="50"/>
        <property name="minIdle" value="1"/>
        <property name="maxWait" value="10000"/>
        <!--
            获取连接时最大等待时间，单位毫秒。配置了maxWait之后,
            缺省启用公平锁，并发效率会有所下降，
            如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
        -->
        <property name="useUnfairLock" value="true"/>
        <!-- 验证数据库连接的有效性 -->
        <property name="validationQuery" value="${validationQuery}"/>
        <!-- 借出连接时不要测试，否则很影响性能  -->
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除 -->
        <property name="testWhileIdle" value="true"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 池中的连接空闲5分钟后被回收 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!-- 连接泄漏处理。Druid提供了removeAbandoned相关配置，用来关闭长时间不使用的连接（例如忘记关闭连接）-->
        <property name="removeAbandoned" value="true"/>
        <!-- 以秒为单位 -->
        <property name="removeAbandonedTimeout" value="1800"/>
        <!-- 关闭abandoned连接时输出错误日志 -->
        <property name="logAbandoned" value="true"/>
        <!--
            配置监控统计拦截的filters
            监控统计："stat"
            SQL注入："wall"
            组合使用："stat,wall" 顺序有影响
        -->
        <property name="filters" value="wall,stat"/>
    </bean>

    <!-- myBatis文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="mapperLocations">
            <list>
                <value>classpath:com/wx</value>
            </list>
        </property>
        <property name="dataSource" ref="dataSource"/>
        <!-- TODO: 需要修改路径 -->
        <property name="configLocation" value="classpath:MyBatisConfig.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 多个包 用分号隔开  -->
        <!-- TODO: 需要修改路径 -->
        <property name="basePackage" value="com.wx.*"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 注解方式配置事物 -->
    <tx:annotation-driven/>
    <aop:config proxy-target-class="true">
        <!-- TODO: 需要注意路径 -->
        <aop:advisor pointcut="execution(* *com.wx.service.*.*(..))" advice-ref="txAdvice"/>
    </aop:config>
    <tx:advice id="txAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="has*" read-only="true"/>
            <tx:method name="locate*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="*" rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>

</beans>
